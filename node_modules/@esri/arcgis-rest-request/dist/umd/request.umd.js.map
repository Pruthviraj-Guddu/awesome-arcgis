{"version":3,"file":"request.umd.js","sources":["../../src/utils/process-params.ts","../../src/utils/encode-query-string.ts","../../src/utils/encode-form-data.ts","../../src/utils/ArcGISRequestError.ts","../../src/request.ts","../../src/utils/warn.ts","../../src/utils/ErrorTypes.ts","../../src/utils/clean-url.ts","../../src/utils/get-portal-url.ts","../../src/utils/get-portal.ts","../../src/utils/append-custom-params.ts","../../src/index.ts"],"sourcesContent":["/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n* Apache-2.0 */\n\n/**\n * Checks parameters to see if we should use FormData to send the request\n * @param params The object whose keys will be encoded.\n * @return A boolean indicating if FormData will be required.\n */\nexport function requiresFormData(params: any) {\n  return Object.keys(params).some(key => {\n    const value = params[key];\n\n    if (!value) {\n      return false;\n    }\n\n    const type = value.constructor.name;\n\n    switch (type) {\n      case \"Array\":\n        return false;\n      case \"Object\":\n        return false;\n      case \"Date\":\n        return false;\n      case \"Function\":\n        return false;\n      case \"Boolean\":\n        return false;\n      case \"String\":\n        return false;\n      case \"Number\":\n        return false;\n      default:\n        return true;\n    }\n  });\n}\n\n/**\n * Converts parameters to the proper representation to send to the ArcGIS REST API.\n * @param params The object whose keys will be encoded.\n * @return A new object with properly encoded values.\n */\nexport function processParams(params: any): any {\n  const newParams: any = {};\n\n  Object.keys(params).forEach(key => {\n    const param = params[key];\n    if (\n      !param &&\n      param !== 0 &&\n      typeof param !== \"boolean\" &&\n      typeof param !== \"string\"\n    ) {\n      return;\n    }\n    const type = param.constructor.name;\n\n    let value: any;\n\n    // properly encodes objects, arrays and dates for arcgis.com and other services.\n    // ported from https://github.com/Esri/esri-leaflet/blob/master/src/Request.js#L22-L30\n    // also see https://github.com/Esri/arcgis-rest-js/issues/18:\n    // null, undefined, function are excluded. If you want to send an empty key you need to send an empty string \"\".\n    switch (type) {\n      case \"Array\":\n        // Based on the first element of the array, classify array as an array of objects to be stringified\n        // or an array of non-objects to be comma-separated\n        value =\n          param[0] &&\n          param[0].constructor &&\n          param[0].constructor.name === \"Object\"\n            ? JSON.stringify(param)\n            : param.join(\",\");\n        break;\n      case \"Object\":\n        value = JSON.stringify(param);\n        break;\n      case \"Date\":\n        value = param.valueOf();\n        break;\n      case \"Function\":\n        value = null;\n        break;\n      case \"Boolean\":\n        value = param + \"\";\n        break;\n      default:\n        value = param;\n        break;\n    }\n    if (value || value === 0 || typeof value === \"string\") {\n      newParams[key] = value;\n    }\n  });\n\n  return newParams;\n}\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { processParams } from \"./process-params\";\n\nexport function encodeParam(key: string, value: any) {\n  return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n}\n\n/**\n * Encodes the passed object as a query string.\n *\n * @param params An object to be encoded.\n * @returns An encoded query string.\n */\nexport function encodeQueryString(params: any): string {\n  const newParams = processParams(params);\n  return Object.keys(newParams)\n    .map((key: any) => {\n      return encodeParam(key, newParams[key]);\n    })\n    .join(\"&\");\n}\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { processParams, requiresFormData } from \"./process-params\";\nimport { encodeQueryString } from \"./encode-query-string\";\n/**\n * Encodes parameters in a [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object in browsers or in a [FormData](https://github.com/form-data/form-data) in Node.js\n *\n * @param params An object to be encoded.\n * @returns The complete [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object.\n */\nexport function encodeFormData(params: any): FormData | string {\n  const useFormData = requiresFormData(params);\n  const newParams = processParams(params);\n  if (useFormData) {\n    const formData = new FormData();\n    Object.keys(newParams).forEach((key: any) => {\n      if (typeof Blob !== \"undefined\" && newParams[key] instanceof Blob) {\n        /* To name the Blob:\n         1. look to an alternate request parameter called 'fileName'\n         2. see if 'name' has been tacked onto the Blob manually\n         3. if all else fails, use the request parameter\n        */\n        const filename = newParams[\"fileName\"] || newParams[key].name || key;\n        formData.append(key, newParams[key], filename);\n      } else {\n        formData.append(key, newParams[key]);\n      }\n    });\n    return formData;\n  } else {\n    return encodeQueryString(params);\n  }\n}\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { IRequestOptions } from \"../request\";\n\n// TypeScript 2.1 no longer allows you to extend built in types. See https://github.com/Microsoft/TypeScript/issues/12790#issuecomment-265981442\n// and https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n//\n// This code is from MDN https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types.\nexport class ArcGISRequestError {\n  /**\n   * The name of this error. Will always be `\"ArcGISRequestError\"` to conform with the [`Error`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error) class.\n   */\n  public name: string;\n\n  /**\n   * Formatted error message. See the [`Error`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error) class for more details.\n   */\n  public message: string;\n\n  /**\n   * The errror message return from the request.\n   */\n  public originalMessage: string;\n\n  /**\n   * The error code returned from the request.\n   */\n  public code: string | number;\n\n  /**\n   * The original JSON response the caused the error.\n   */\n  public response: any;\n\n  /**\n   * The URL of the original request that caused the error\n   */\n  public url: string;\n\n  /**\n   * The options of the original request that caused the error\n   */\n  public options: IRequestOptions;\n\n  /**\n   * Create a new `ArcGISRequestError`  object.\n   *\n   * @param message - The error message from the API\n   * @param code - The error code from the API\n   * @param response - The original response from the API that caused the error\n   * @param url - The original url of the request\n   * @param options - The original options and parameters of the request\n   */\n  constructor(\n    message?: string,\n    code?: string | number,\n    response?: any,\n    url?: string,\n    options?: IRequestOptions\n  ) {\n    message = message || \"UNKNOWN_ERROR\";\n    code = code || \"UNKNOWN_ERROR_CODE\";\n\n    this.name = \"ArcGISRequestError\";\n    this.message =\n      code === \"UNKNOWN_ERROR_CODE\" ? message : `${code}: ${message}`;\n    this.originalMessage = message;\n    this.code = code;\n    this.response = response;\n    this.url = url;\n    this.options = options;\n  }\n}\nArcGISRequestError.prototype = Object.create(Error.prototype);\nArcGISRequestError.prototype.constructor = ArcGISRequestError;\n","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { encodeFormData } from \"./utils/encode-form-data\";\nimport { encodeQueryString } from \"./utils/encode-query-string\";\nimport { requiresFormData } from \"./utils/process-params\";\nimport { ArcGISRequestError } from \"./utils/ArcGISRequestError\";\nimport { IRetryAuthError } from \"./utils/retryAuthError\";\nimport { HTTPMethods, IParams, ITokenRequestOptions } from \"./utils/params\";\n\n/**\n * Authentication can be supplied to `request` via [`UserSession`](../../auth/UserSession/) or [`ApplicationSession`](../../auth/ApplicationSession/). Both classes extend `IAuthenticationManager`.\n * ```js\n * const session = new UserSession({\n *   username: \"jsmith\",\n *   password: \"123456\",\n *   // optional\n *   portal: \"https://[yourserver]/arcgis/sharing/rest\"\n * })\n *\n * request(url, { authentication: session })\n * ```\n */\nexport interface IAuthenticationManager {\n  /**\n   * Defaults to 'https://www.arcgis.com/sharing/rest'.\n   */\n  portal: string;\n  getToken(url: string, requestOptions?: ITokenRequestOptions): Promise<string>;\n}\n\n/**\n * Options for the `request()` method.\n */\nexport interface IRequestOptions {\n  /**\n   * Additional parameters to pass in the request.\n   */\n  params?: IParams;\n\n  /**\n   * The HTTP method to send the request with.\n   */\n  httpMethod?: HTTPMethods;\n\n  /**\n   * Return the raw [response](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n   */\n  rawResponse?: boolean;\n\n  /**\n   * The instance of `IAuthenticationManager` to use to authenticate this request.\n   */\n  authentication?: IAuthenticationManager;\n\n  /**\n   * Base url for the portal you want to make the request to. Defaults to 'https://www.arcgis.com/sharing/rest'.\n   */\n  portal?: string;\n\n  /**\n   * The implementation of `fetch` to use. Defaults to a global `fetch`.\n   */\n  fetch?: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n\n  /**\n   * If the length of a GET request's URL exceeds `maxUrlLength` the request will use POST instead.\n   */\n  maxUrlLength?: number;\n\n  /**\n   * Additional [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) to pass into the request.\n   */\n  headers?: { [key: string]: any };\n}\n\nexport const NODEJS_DEFAULT_REFERER_HEADER = `@esri/arcgis-rest-js`;\n\n/**\n * ```js\n * import { request } from '@esri/arcgis-rest-request';\n * //\n * request('https://www.arcgis.com/sharing/rest')\n *   .then(response) // response.currentVersion === 5.2\n * //\n * request('https://www.arcgis.com/sharing/rest', {\n *   httpMethod: \"GET\"\n * })\n * //\n * request('https://www.arcgis.com/sharing/rest/search', {\n *   params: { q: 'parks' }\n * })\n *   .then(response) // response.total => 78379\n * ```\n * Generic method for making HTTP requests to ArcGIS REST API endpoints.\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function request(\n  url: string,\n  requestOptions: IRequestOptions = { params: { f: \"json\" } }\n): Promise<any> {\n  const options: IRequestOptions = {\n    httpMethod: \"POST\",\n    ...requestOptions\n  };\n\n  const missingGlobals: string[] = [];\n  const recommendedPackages: string[] = [];\n\n  // don't check for a global fetch if a custom implementation was passed through\n  if (!options.fetch && typeof fetch !== \"undefined\") {\n    options.fetch = fetch.bind(Function(\"return this\")());\n  } else {\n    missingGlobals.push(\"`fetch`\");\n    recommendedPackages.push(\"`isomorphic-fetch`\");\n  }\n\n  if (typeof Promise === \"undefined\") {\n    missingGlobals.push(\"`Promise`\");\n    recommendedPackages.push(\"`es6-promise`\");\n  }\n\n  if (typeof FormData === \"undefined\") {\n    missingGlobals.push(\"`FormData`\");\n    recommendedPackages.push(\"`isomorphic-form-data`\");\n  }\n\n  if (\n    !options.fetch ||\n    typeof Promise === \"undefined\" ||\n    typeof FormData === \"undefined\"\n  ) {\n    throw new Error(\n      `\\`arcgis-rest-request\\` requires global variables for \\`fetch\\`, \\`Promise\\` and \\`FormData\\` to be present in the global scope. You are missing ${missingGlobals.join(\n        \", \"\n      )}. We recommend installing the ${recommendedPackages.join(\n        \", \"\n      )} modules at the root of your application to add these to the global scope. See https://bit.ly/2KNwWaJ for more info.`\n    );\n  }\n\n  const { httpMethod, authentication, rawResponse } = options;\n\n  const params: IParams = {\n    ...{ f: \"json\" },\n    ...requestOptions.params\n  };\n\n  const fetchOptions: RequestInit = {\n    method: httpMethod,\n    // ensures behavior mimics XMLHttpRequest. needed to support sending IWA cookies\n    credentials: \"same-origin\"\n  };\n\n  return (authentication\n    ? authentication.getToken(url, {\n        fetch: options.fetch\n      })\n    : Promise.resolve(\"\")\n  )\n    .then(token => {\n      if (token.length) {\n        params.token = token;\n      }\n\n      if (fetchOptions.method === \"GET\") {\n        // encode the parameters into the query string\n        const queryParams = encodeQueryString(params);\n        // dont append a '?' unless parameters are actually present\n        const urlWithQueryString =\n          queryParams === \"\" ? url : url + \"?\" + encodeQueryString(params);\n\n        if (\n          options.maxUrlLength &&\n          urlWithQueryString.length > options.maxUrlLength\n        ) {\n          // the consumer specified a maximum length for URLs\n          // and this would exceed it, so use post instead\n          fetchOptions.method = \"POST\";\n        } else {\n          // just use GET\n          url = urlWithQueryString;\n        }\n      }\n\n      if (fetchOptions.method === \"POST\") {\n        fetchOptions.body = encodeFormData(params);\n      }\n\n      // Mixin headers from request options\n      fetchOptions.headers = {\n        ...requestOptions.headers\n      };\n\n      /* istanbul ignore next - karma reports coverage on browser tests only */\n      if (typeof window === \"undefined\" && !fetchOptions.headers.referer) {\n        fetchOptions.headers.referer = NODEJS_DEFAULT_REFERER_HEADER;\n      }\n\n      /* istanbul ignore else blob responses are difficult to make cross platform we will just have to trust the isomorphic fetch will do its job */\n      if (!requiresFormData(params)) {\n        fetchOptions.headers[\"Content-Type\"] =\n          \"application/x-www-form-urlencoded\";\n      }\n\n      return options.fetch(url, fetchOptions);\n    })\n    .then(response => {\n      if (!response.ok) {\n        // server responded w/ an actual error (404, 500, etc)\n        const { status, statusText } = response;\n        throw new ArcGISRequestError(\n          statusText,\n          `HTTP ${status}`,\n          response,\n          url,\n          options\n        );\n      }\n      if (rawResponse) {\n        return response;\n      }\n      switch (params.f) {\n        case \"json\":\n          return response.json();\n        case \"geojson\":\n          return response.json();\n        case \"html\":\n          return response.text();\n        case \"text\":\n          return response.text();\n        /* istanbul ignore next blob responses are difficult to make cross platform we will just have to trust that isomorphic fetch will do its job */\n        default:\n          return response.blob();\n      }\n    })\n    .then(data => {\n      if ((params.f === \"json\" || params.f === \"geojson\") && !rawResponse) {\n        return checkForErrors(data, url, params, options);\n      } else {\n        return data;\n      }\n    });\n}\n\nexport class ArcGISAuthError extends ArcGISRequestError {\n  /**\n   * Create a new `ArcGISAuthError`  object.\n   *\n   * @param message - The error message from the API\n   * @param code - The error code from the API\n   * @param response - The original response from the API that caused the error\n   * @param url - The original url of the request\n   * @param options - The original options of the request\n   */\n  constructor(\n    message = \"AUTHENTICATION_ERROR\",\n    code: string | number = \"AUTHENTICATION_ERROR_CODE\",\n    response?: any,\n    url?: string,\n    options?: IRequestOptions\n  ) {\n    super(message, code, response, url, options);\n    this.name = \"ArcGISAuthError\";\n    this.message =\n      code === \"AUTHENTICATION_ERROR_CODE\" ? message : `${code}: ${message}`;\n  }\n\n  public retry(getSession: IRetryAuthError, retryLimit = 3) {\n    let tries = 0;\n\n    const retryRequest = (resolve: any, reject: any) => {\n      getSession(this.url, this.options)\n        .then(session => {\n          const newOptions = {\n            ...this.options,\n            ...{ authentication: session }\n          };\n\n          tries = tries + 1;\n          return request(this.url, newOptions);\n        })\n        .then(response => {\n          resolve(response);\n        })\n        .catch(e => {\n          if (e.name === \"ArcGISAuthError\" && tries < retryLimit) {\n            retryRequest(resolve, reject);\n          } else if (e.name === \"ArcGISAuthError\" && tries >= retryLimit) {\n            reject(this);\n          } else {\n            reject(e);\n          }\n        });\n    };\n\n    return new Promise((resolve, reject) => {\n      retryRequest(resolve, reject);\n    });\n  }\n}\n\n/**\n * Checks for errors in a JSON response from the ArcGIS REST API. If there are no errors, it will return the `data` passed in. If there is an error, it will throw an `ArcGISRequestError` or `ArcGISAuthError`.\n *\n * @param data The response JSON to check for errors.\n * @param url The url of the original request\n * @param params The parameters of the original request\n * @param options The options of the original request\n * @returns The data that was passed in the `data` parameter\n */\nexport function checkForErrors(\n  response: any,\n  url?: string,\n  params?: IParams,\n  options?: IRequestOptions\n): any {\n  // this is an error message from billing.arcgis.com backend\n  if (response.code >= 400) {\n    const { message, code } = response;\n    throw new ArcGISRequestError(message, code, response, url, options);\n  }\n\n  // error from ArcGIS Online or an ArcGIS Portal or server instance.\n  if (response.error) {\n    const { message, code, messageCode } = response.error;\n    const errorCode = messageCode || code || \"UNKNOWN_ERROR_CODE\";\n\n    if (\n      code === 498 ||\n      code === 499 ||\n      messageCode === \"GWM_0003\" ||\n      (code === 400 && message === \"Unable to generate token.\")\n    ) {\n      throw new ArcGISAuthError(message, errorCode, response, url, options);\n    }\n\n    throw new ArcGISRequestError(message, errorCode, response, url, options);\n  }\n\n  // error from a status check\n  if (response.status === \"failed\" || response.status === \"failure\") {\n    let message: string;\n    let code: string = \"UNKNOWN_ERROR_CODE\";\n\n    try {\n      message = JSON.parse(response.statusMessage).message;\n      code = JSON.parse(response.statusMessage).code;\n    } catch (e) {\n      message = response.statusMessage || response.message;\n    }\n\n    throw new ArcGISRequestError(message, code, response, url, options);\n  }\n\n  return response;\n}\n","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Method used internally to surface messages to developers.\n */\nexport function warn(message: string) {\n  if (console && console.warn) {\n    console.warn.apply(console, [message]);\n  }\n}\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Enum describing the different errors that might be thrown by a request.\n *\n * ```ts\n * import { request, ErrorTypes } from '@esri/arcgis-rest-request';\n *\n * request(\"...\").catch((e) => {\n *   switch(e.name) {\n *     case ErrorType.ArcGISRequestError:\n *     // handle a general error from the API\n *     break;\n *\n *     case ErrorType.ArcGISAuthError:\n *     // handle an authentication error\n *     break;\n *\n *     default:\n *     // handle some other error (usually a network error)\n *   }\n * });\n * ```\n */\nexport enum ErrorTypes {\n  ArcGISRequestError = \"ArcGISRequestError\",\n  ArcGISAuthError = \"ArcGISAuthError\"\n}\n","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.\n */\nexport function cleanUrl(url: string) {\n  // trim leading and trailing spaces, but not spaces inside the url\n  url = url.trim();\n\n  // remove the trailing slash to the url if one was included\n  if (url[url.length - 1] === \"/\") {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { IRequestOptions } from \"../request\";\nimport { cleanUrl } from \"./clean-url\";\n/**\n * Helper that returns the appropriate portal url for a given request. `requestOptions.portal` is given\n * precedence over `authentication.portal`. If neither are present, `www.arcgis.com/sharing/rest` is returned.\n *\n * @param requestOptions - Request options that may have authentication manager\n * @returns Portal url to be used in API requests\n */\nexport function getPortalUrl(requestOptions: IRequestOptions = {}): string {\n  // use portal in options if specified\n  if (requestOptions.portal) {\n    return cleanUrl(requestOptions.portal);\n  }\n\n  // if auth was passed, use that portal\n  if (requestOptions.authentication) {\n    // the portal url is already scrubbed in the auth package\n    return requestOptions.authentication.portal;\n  }\n\n  // default to arcgis.com\n  return \"https://www.arcgis.com/sharing/rest\";\n}\n","/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request, IRequestOptions } from \"../request\";\n\nimport { getPortalUrl } from \"./get-portal-url\";\n\nexport interface IPortal {\n  id: string;\n  isPortal: boolean;\n  name: string;\n  [key: string]: any;\n}\n\n/**\n * Get the portal\n * @param requestOptions\n */\nexport function getSelf(requestOptions?: IRequestOptions): Promise<IPortal> {\n  // just delegate to getPortal w/o an id\n  return getPortal(null, requestOptions);\n}\n\n/**\n * ```js\n * import { getPortal } from \"@esri/arcgis-rest-request\";\n * //\n * getPortal()\n * getPortal(\"fe8\")\n * getPortal(null, { portal: \"https://custom.maps.arcgis.com/sharing/rest/\" })\n * ```\n * Fetch information about the current portal by id. If no id is passed, portals/self will be called\n * @param id\n * @param requestOptions\n */\nexport function getPortal(\n  id?: string,\n  requestOptions?: IRequestOptions\n): Promise<IPortal> {\n  // construct the search url\n  const idOrSelf = id ? id : \"self\";\n  const url = `${getPortalUrl(requestOptions)}/portals/${idOrSelf}`;\n\n  // default to a GET request\n  const options: IRequestOptions = {\n    ...{ httpMethod: \"GET\" },\n    ...requestOptions\n  };\n\n  // send the request\n  return request(url, options);\n}\n","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { IRequestOptions } from \"../request\";\n\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nexport function appendCustomParams(\n  oldOptions: IRequestOptions,\n  newOptions: IRequestOptions\n) {\n  // at v2.0.0, this should be refactored as a nonmutating method that takes a single argument, mixes in everything and returns a new instance of IRequestOptions\n\n  // only pass query parameters through in the request, not generic IRequestOptions props\n  Object.keys(oldOptions).forEach(function(key: string) {\n    if (\n      key !== \"url\" &&\n      key !== \"params\" &&\n      key !== \"authentication\" &&\n      key !== \"httpMethod\" &&\n      key !== \"fetch\" &&\n      key !== \"portal\" &&\n      key !== \"maxUrlLength\" &&\n      key !== \"headers\" &&\n      key !== \"endpoint\" &&\n      key !== \"decodeValues\"\n    ) {\n      newOptions.params[key] = (oldOptions as { [key: string]: any })[key];\n    }\n  });\n}\n","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nexport * from \"./request\";\nexport * from \"./utils/encode-form-data\";\nexport * from \"./utils/encode-query-string\";\nexport * from \"./utils/warn\";\nexport * from \"./utils/ArcGISRequestError\";\nexport * from \"./utils/retryAuthError\";\nexport * from \"./utils/ErrorTypes\";\nexport * from \"./utils/params\";\nexport * from \"./utils/process-params\";\nexport * from \"./utils/get-portal\";\nexport * from \"./utils/get-portal-url\";\nexport * from \"./utils/append-custom-params\";\nexport * from \"./utils/clean-url\";\n"],"names":["tslib_1.__extends","ErrorTypes"],"mappings":"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"}